{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","overview","poster_path","title","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","console","log","results","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAYe,SAASA,EAAT,GAA2D,IARzDC,EAQcC,EAA0C,EAA1CA,SAASC,EAAiC,EAAjCA,YAAYC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,aACtD,OAEQ,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKJ,EAdV,kCAeqBA,EACX,oKACAK,IAAKJ,IACf,sBAAKE,UAAU,aAAf,UACA,6BAAKF,IACL,sBAAME,UAAS,eAlBdL,EAkB+BI,EAjBzCJ,GAAM,EACE,QACFA,EAAK,EACH,MACE,WAaD,SAAkDI,OAElD,sBAAKC,UAAU,iBAAf,UACI,0CACA,4BAAIJ,UCsCTO,MAvDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAMC,EAAN,KAAaC,EAAb,KACA,EAAkCF,mBAAS,IAA3C,mBAAMG,EAAN,KAAiBC,EAAjB,KAGDC,qBAAU,WACTC,EAVmB,yHAWnB,IAEF,IAAMA,EAAW,SAACC,GAChBC,MAAMD,GACLE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAUU,EAAKG,aAoBjB,OACE,gCACE,wBAAQnB,UAAU,cAAlB,SACE,sBAAMoB,SAdW,SAACC,GACnBA,EAAEC,iBAEJf,IACDG,EA7Be,4FA6BMH,GAErBC,EAAc,MAQV,SACE,uBACEe,KAAK,SACLC,YAAY,YACZC,MAAOlB,EACPmB,SAvBa,SAACL,GACtBb,EAAca,EAAEM,OAAOF,cA0BvB,qBAAKzB,UAAU,kBAAf,SACGK,EAAOuB,OAAS,GAAKvB,EAAOwB,KAAI,SAACC,GAAD,OAC7B,cAACpC,EAAD,eAA0BoC,GAAdA,EAAMC,aC7CbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dfc75898.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst IMG_API = \"http://image.tmdb.org/t/p/w1280\";\r\n\r\nconst setVote = (vote)=>{\r\n    if(vote>=8){\r\n        return 'green'\r\n    }else if(vote<5){\r\n        return 'red'\r\n    }else return 'orange'\r\n}\r\n\r\nexport default function Movie({overview,poster_path,title,vote_average}) {\r\n    return (\r\n           \r\n            <div className='movie'>\r\n                <img src={poster_path ?\r\n                          (IMG_API + poster_path):\r\n                          \"https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8bW92aWV8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                        } alt={title}></img>\r\n                <div className='movie-info'>\r\n                <h3>{title}</h3>\r\n                <span className={`tag ${setVote(vote_average)}`}>{vote_average}</span>\r\n                </div>\r\n                <div className='movie-overview'>\r\n                    <h4>Overview</h4>\r\n                    <p>{overview}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","\nimport React,{useState,useEffect} from 'react'\nimport Movie from './components/Movie'\n\n\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\"\n\nconst SEARCH_API = \"http://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\"\n\nfunction App() {\n  const[movies,setMovies] = useState([])\n  const[searchTerm,setSearchTerm] = useState('')\n\n \n useEffect(()=>{\n  getMovies(FEATURED_API)\n},[])\n\nconst getMovies =(API)=>{\n  fetch(API)\n  .then((res) => res.json())\n  .then((data) => {\n    console.log(data)\n    setMovies(data.results)\n })\n}\n \n \n const handleInputChange=(e)=>{\n    setSearchTerm(e.target.value)\n }\n\n const handleInputSubmit=(e)=>{\n       e.preventDefault();\n  \n  if(searchTerm){\n    getMovies(SEARCH_API+searchTerm)\n   \n    setSearchTerm('')\n  }\n}\n \n\n  return (\n    <div>\n      <header className='top-section'>\n        <form onSubmit={handleInputSubmit}>\n          <input \n            type='search'  \n            placeholder='Search...' \n            value={searchTerm}\n            onChange={handleInputChange}>\n          </input>\n       </form>\n      </header>\n    <div className='movie-container'>\n      {movies.length > 0 && movies.map((movie)=>\n          <Movie key={movie.id} {...movie}/>\n      )}  \n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}